{"ast":null,"code":"var _jsxFileName = \"/Users/eddyg/word-game/word-game/src/components/WordGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport { Button } from '../components/ui/button';\nimport { Card, CardContent } from '../components/ui/card';\nimport { AlertDialog, AlertDialogAction, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle } from '../components/ui/alert-dialog';\n\n// Scrabble letter distribution and scores\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst letterDistribution = {\n  A: 9,\n  B: 2,\n  C: 2,\n  D: 4,\n  E: 12,\n  F: 2,\n  G: 3,\n  H: 2,\n  I: 9,\n  J: 1,\n  K: 1,\n  L: 4,\n  M: 2,\n  N: 6,\n  O: 8,\n  P: 2,\n  Q: 1,\n  R: 6,\n  S: 4,\n  T: 6,\n  U: 4,\n  V: 2,\n  W: 2,\n  X: 1,\n  Y: 2,\n  Z: 1\n};\nconst letterScores = {\n  A: 1,\n  B: 3,\n  C: 3,\n  D: 2,\n  E: 1,\n  F: 4,\n  G: 2,\n  H: 4,\n  I: 1,\n  J: 8,\n  K: 5,\n  L: 1,\n  M: 3,\n  N: 1,\n  O: 1,\n  P: 3,\n  Q: 10,\n  R: 1,\n  S: 1,\n  T: 1,\n  U: 1,\n  V: 4,\n  W: 4,\n  X: 8,\n  Y: 4,\n  Z: 10\n};\n\n// Function to generate the deck\nconst generateDeck = () => {\n  let deck = [];\n  Object.entries(letterDistribution).forEach(([letter, count]) => {\n    for (let i = 0; i < count; i++) {\n      deck.push(letter);\n    }\n  });\n  return deck;\n};\n\n// Function to shuffle the deck\nconst shuffleDeck = deck => {\n  for (let i = deck.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [deck[i], deck[j]] = [deck[j], deck[i]];\n  }\n  return deck;\n};\n\n// Function to draw cards\nconst drawCards = (deck, count) => {\n  return deck.splice(0, count);\n};\n\n// Main game component\nconst WordGame = () => {\n  _s();\n  const [deck, setDeck] = useState([]);\n  const [hand, setHand] = useState([]);\n  const [selectedCards, setSelectedCards] = useState(new Set());\n  const [score, setScore] = useState(0);\n  const [roundScore, setRoundScore] = useState(0);\n  const [playsLeft, setPlaysLeft] = useState(3);\n  const [discardsLeft, setDiscardsLeft] = useState(4);\n  const [message, setMessage] = useState('');\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [wordlist, setWordlist] = useState([]);\n  useEffect(() => {\n    // Initialize the game\n    initializeGame();\n\n    // Fetch the word list\n    fetch('./dictionary.txt').then(response => response.text()).then(text => {\n      setWordlist(text.split('\\n'));\n    });\n  }, []);\n  const initializeGame = () => {\n    const newDeck = shuffleDeck(generateDeck());\n    setDeck(newDeck);\n    setHand(drawCards(newDeck, 7));\n    setSelectedCards(new Set());\n    setScore(0);\n    setRoundScore(0);\n    setPlaysLeft(3);\n    setDiscardsLeft(4);\n    setMessage('');\n    setIsGameOver(false);\n  };\n  const handleCardClick = index => {\n    const newSelectedCards = new Set(selectedCards);\n    if (newSelectedCards.has(index)) {\n      newSelectedCards.delete(index);\n    } else {\n      newSelectedCards.add(index);\n    }\n    setSelectedCards(newSelectedCards);\n  };\n  const handlePlay = () => {\n    if (playsLeft === 0) {\n      setMessage(\"No plays left this round!\");\n      return;\n    }\n    const word = Array.from(selectedCards).sort((a, b) => a - b).map(index => hand[index]).join('').toUpperCase();\n    if (word.length < 3) {\n      setMessage(\"Word must be at least 3 letters long!\");\n      return;\n    }\n    if (!wordlist.includes(word)) {\n      setMessage(`Not a valid word: ${word}!`);\n      return;\n    }\n    const wordScore = word.split('').reduce((sum, letter) => sum + letterScores[letter.toUpperCase()], 0);\n    setScore(score + wordScore);\n    setRoundScore(roundScore + wordScore);\n    setPlaysLeft(playsLeft - 1);\n\n    // Remove played cards and draw new ones\n    const newHand = [...hand];\n    Array.from(selectedCards).forEach(index => {\n      newHand[index] = drawCards(deck, 1)[0];\n    });\n    setHand(newHand);\n    setSelectedCards(new Set());\n    setMessage(`Played \"${word}\" for ${wordScore} points!`);\n    if (playsLeft === 1 && discardsLeft === 0) {\n      setIsGameOver(true);\n    }\n  };\n  const handleDiscard = () => {\n    if (discardsLeft === 0) {\n      setMessage(\"No discards left this round!\");\n      return;\n    }\n    if (selectedCards.size === 0) {\n      setMessage(\"Select cards to discard!\");\n      return;\n    }\n    const newHand = [...hand];\n    Array.from(selectedCards).forEach(index => {\n      newHand[index] = drawCards(deck, 1)[0];\n    });\n    setHand(newHand);\n    setSelectedCards(new Set());\n    setDiscardsLeft(discardsLeft - 1);\n    setMessage(`Discarded ${selectedCards.size} cards.`);\n    if (playsLeft === 0 && discardsLeft === 1) {\n      setIsGameOver(true);\n    }\n  };\n  const onDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n    const newHand = Array.from(hand);\n    const [reorderedItem] = newHand.splice(result.source.index, 1);\n    newHand.splice(result.destination.index, 0, reorderedItem);\n    setHand(newHand);\n\n    // Update selected cards indices if necessary\n    const newSelectedCards = new Set();\n    selectedCards.forEach(index => {\n      if (index === result.source.index) {\n        newSelectedCards.add(result.destination.index);\n      } else if (index > result.source.index && index <= result.destination.index) {\n        newSelectedCards.add(index - 1);\n      } else if (index < result.source.index && index >= result.destination.index) {\n        newSelectedCards.add(index + 1);\n      } else {\n        newSelectedCards.add(index);\n      }\n    });\n    setSelectedCards(newSelectedCards);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Scrabblatro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Round Score: \", roundScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Plays Left: \", playsLeft]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Discards Left: \", discardsLeft]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"hand\",\n        direction: \"horizontal\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          className: \"flex flex-wrap mb-4\",\n          children: [hand.map((letter, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: `card-${index}`,\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              className: `${snapshot.isDragging ? 'z-10' : ''} mx-0.5`,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: `w-20 h-24 flex flex-col items-center justify-center cursor-pointer ${selectedCards.has(index) ? 'ring-2 ring-blue-500' : ''}`,\n                onClick: () => handleCardClick(index),\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  className: \"p-2 flex flex-col items-center justify-between h-full select-none\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm\",\n                    children: [letterScores[letter], \" pts\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-4xl font-bold\",\n                    children: letter\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"h-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 23\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 18\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-x-2 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handlePlay,\n        disabled: selectedCards.size === 0 || playsLeft === 0,\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDiscard,\n        disabled: selectedCards.size === 0 || discardsLeft === 0,\n        children: \"Discard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n      open: isGameOver,\n      children: /*#__PURE__*/_jsxDEV(AlertDialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(AlertDialogHeader, {\n          children: [/*#__PURE__*/_jsxDEV(AlertDialogTitle, {\n            children: \"Game Over!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogDescription, {\n            children: [\"Your final score is \", score, \". Would you like to play again?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AlertDialogFooter, {\n          children: /*#__PURE__*/_jsxDEV(AlertDialogAction, {\n            onClick: initializeGame,\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(WordGame, \"5G2BIJKjWrrlAW1N5ko8lkggOZI=\");\n_c = WordGame;\nexport default WordGame;\nvar _c;\n$RefreshReg$(_c, \"WordGame\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","Button","Card","CardContent","AlertDialog","AlertDialogAction","AlertDialogContent","AlertDialogDescription","AlertDialogFooter","AlertDialogHeader","AlertDialogTitle","jsxDEV","_jsxDEV","letterDistribution","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","letterScores","generateDeck","deck","Object","entries","forEach","letter","count","i","push","shuffleDeck","length","j","Math","floor","random","drawCards","splice","WordGame","_s","setDeck","hand","setHand","selectedCards","setSelectedCards","Set","score","setScore","roundScore","setRoundScore","playsLeft","setPlaysLeft","discardsLeft","setDiscardsLeft","message","setMessage","isGameOver","setIsGameOver","wordlist","setWordlist","initializeGame","fetch","then","response","text","split","newDeck","handleCardClick","index","newSelectedCards","has","delete","add","handlePlay","word","Array","from","sort","a","b","map","join","toUpperCase","includes","wordScore","reduce","sum","newHand","handleDiscard","size","onDragEnd","result","destination","reorderedItem","source","className","children","fileName","_jsxFileName","lineNumber","columnNumber","droppableId","direction","provided","droppableProps","ref","innerRef","draggableId","snapshot","draggableProps","dragHandleProps","isDragging","onClick","placeholder","disabled","open","_c","$RefreshReg$"],"sources":["/Users/eddyg/word-game/word-game/src/components/WordGame.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable, DropResult } from '@hello-pangea/dnd';\nimport { Button } from '../components/ui/button';\nimport { Card, CardContent } from '../components/ui/card';\nimport { \n  AlertDialog, \n  AlertDialogAction, \n  AlertDialogContent, \n  AlertDialogDescription, \n  AlertDialogFooter, \n  AlertDialogHeader, \n  AlertDialogTitle \n} from '../components/ui/alert-dialog';\n\n// Scrabble letter distribution and scores\nconst letterDistribution: { [key: string]: number } = {\n  A: 9, B: 2, C: 2, D: 4, E: 12, F: 2, G: 3, H: 2, I: 9, J: 1, K: 1, L: 4, M: 2,\n  N: 6, O: 8, P: 2, Q: 1, R: 6, S: 4, T: 6, U: 4, V: 2, W: 2, X: 1, Y: 2, Z: 1\n};\n\nconst letterScores: { [key: string]: number } = {\n  A: 1, B: 3, C: 3, D: 2, E: 1, F: 4, G: 2, H: 4, I: 1, J: 8, K: 5, L: 1, M: 3,\n  N: 1, O: 1, P: 3, Q: 10, R: 1, S: 1, T: 1, U: 1, V: 4, W: 4, X: 8, Y: 4, Z: 10\n};\n\n// Function to generate the deck\nconst generateDeck = (): string[] => {\n  let deck: string[] = [];\n  Object.entries(letterDistribution).forEach(([letter, count]) => {\n    for (let i = 0; i < count; i++) {\n      deck.push(letter);\n    }\n  });\n  return deck;\n};\n\n// Function to shuffle the deck\nconst shuffleDeck = (deck: string[]): string[] => {\n  for (let i = deck.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [deck[i], deck[j]] = [deck[j], deck[i]];\n  }\n  return deck;\n};\n\n// Function to draw cards\nconst drawCards = (deck: string[], count: number): string[] => {\n  return deck.splice(0, count);\n};\n\n// Main game component\nconst WordGame: React.FC = () => {\n  const [deck, setDeck] = useState<string[]>([]);\n  const [hand, setHand] = useState<string[]>([]);\n  const [selectedCards, setSelectedCards] = useState<Set<number>>(new Set());\n  const [score, setScore] = useState<number>(0);\n  const [roundScore, setRoundScore] = useState<number>(0);\n  const [playsLeft, setPlaysLeft] = useState<number>(3);\n  const [discardsLeft, setDiscardsLeft] = useState<number>(4);\n  const [message, setMessage] = useState<string>('');\n  const [isGameOver, setIsGameOver] = useState<boolean>(false);\n  const [wordlist, setWordlist] = useState<string[]>([]);\n\n  useEffect(() => {\n    // Initialize the game\n    initializeGame();\n    \n    // Fetch the word list\n    fetch('./dictionary.txt')\n      .then(response => response.text())\n      .then(text => {\n        setWordlist(text.split('\\n'));\n      });\n  }, []);\n\n  const initializeGame = () => {\n    const newDeck = shuffleDeck(generateDeck());\n    setDeck(newDeck);\n    setHand(drawCards(newDeck, 7));\n    setSelectedCards(new Set());\n    setScore(0);\n    setRoundScore(0);\n    setPlaysLeft(3);\n    setDiscardsLeft(4);\n    setMessage('');\n    setIsGameOver(false);\n  };\n\n  const handleCardClick = (index: number) => {\n    const newSelectedCards = new Set(selectedCards);\n    if (newSelectedCards.has(index)) {\n      newSelectedCards.delete(index);\n    } else {\n      newSelectedCards.add(index);\n    }\n    setSelectedCards(newSelectedCards);\n  };\n\n  const handlePlay = () => {\n    if (playsLeft === 0) {\n      setMessage(\"No plays left this round!\");\n      return;\n    }\n\n    const word = Array.from(selectedCards).sort((a, b) => a - b).map(index => hand[index]).join('').toUpperCase();\n    if (word.length < 3) {\n      setMessage(\"Word must be at least 3 letters long!\");\n      return;\n    }\n\n    if (!wordlist.includes(word)) {\n      setMessage(`Not a valid word: ${word}!`);\n      return;\n    }\n\n    const wordScore = word.split('').reduce((sum, letter) => sum + letterScores[letter.toUpperCase()], 0);\n    setScore(score + wordScore);\n    setRoundScore(roundScore + wordScore);\n    setPlaysLeft(playsLeft - 1);\n\n    // Remove played cards and draw new ones\n    const newHand = [...hand];\n    Array.from(selectedCards).forEach(index => {\n      newHand[index] = drawCards(deck, 1)[0];\n    });\n    setHand(newHand);\n    setSelectedCards(new Set());\n    setMessage(`Played \"${word}\" for ${wordScore} points!`);\n\n    if (playsLeft === 1 && discardsLeft === 0) {\n      setIsGameOver(true);\n    }\n  };\n\n  const handleDiscard = () => {\n    if (discardsLeft === 0) {\n      setMessage(\"No discards left this round!\");\n      return;\n    }\n\n    if (selectedCards.size === 0) {\n      setMessage(\"Select cards to discard!\");\n      return;\n    }\n\n    const newHand = [...hand];\n    Array.from(selectedCards).forEach(index => {\n      newHand[index] = drawCards(deck, 1)[0];\n    });\n    setHand(newHand);\n    setSelectedCards(new Set());\n    setDiscardsLeft(discardsLeft - 1);\n    setMessage(`Discarded ${selectedCards.size} cards.`);\n\n    if (playsLeft === 0 && discardsLeft === 1) {\n      setIsGameOver(true);\n    }\n  };\n\n  const onDragEnd = (result: DropResult) => {\n      if (!result.destination) {\n          return;\n      }\n\n      const newHand = Array.from(hand);\n      const [reorderedItem] = newHand.splice(result.source.index, 1);\n      newHand.splice(result.destination.index, 0, reorderedItem);\n\n      setHand(newHand);\n\n      // Update selected cards indices if necessary\n      const newSelectedCards = new Set<number>();\n      selectedCards.forEach(index => {\n          if (index === result.source.index) {\n              newSelectedCards.add(result.destination!.index);\n          } else if (index > result.source.index && index <= result.destination!.index) {\n              newSelectedCards.add(index - 1);\n          } else if (index < result.source.index && index >= result.destination!.index) {\n              newSelectedCards.add(index + 1);\n          } else {\n              newSelectedCards.add(index);\n          }\n      });\n      setSelectedCards(newSelectedCards);\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Scrabblatro</h1>\n      <div className=\"mb-4\">\n        <p>Total Score: {score}</p>\n        <p>Round Score: {roundScore}</p>\n        <p>Plays Left: {playsLeft}</p>\n        <p>Discards Left: {discardsLeft}</p>\n      </div>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"hand\" direction=\"horizontal\">\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef} className=\"flex flex-wrap mb-4\">\n              {hand.map((letter, index) => (\n                 <Draggable key={index} draggableId={`card-${index}`} index={index}>\n                  {(provided, snapshot) => (\n                      <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      className={`${snapshot.isDragging ? 'z-10' : ''} mx-0.5`}\n                      >\n                      <Card \n                      className={`w-20 h-24 flex flex-col items-center justify-center cursor-pointer ${selectedCards.has(index) ? 'ring-2 ring-blue-500' : ''}`}\n                      onClick={() => handleCardClick(index)}\n                      >\n                      <CardContent className=\"p-2 flex flex-col items-center justify-between h-full select-none\">\n                      <span className=\"text-sm\">{letterScores[letter]} pts</span>\n                      <span className=\"text-4xl font-bold\">{letter}</span>\n                      <div className=\"h-2\"></div>\n                      </CardContent>\n                      </Card>\n                      </div>\n                  )}\n                  </Draggable>\n              ))}\n              {provided.placeholder}\n              </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <div className=\"space-x-2 mb-4\">\n        <Button onClick={handlePlay} disabled={selectedCards.size === 0 || playsLeft === 0}>Play</Button>\n        <Button onClick={handleDiscard} disabled={selectedCards.size === 0 || discardsLeft === 0}>Discard</Button>\n      </div>\n      <p>{message}</p>\n      <AlertDialog open={isGameOver}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Game Over!</AlertDialogTitle>\n            <AlertDialogDescription>\n              Your final score is {score}. Would you like to play again?\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogAction onClick={initializeGame}>Play Again</AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </div>\n  );\n};\n\nexport default WordGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}