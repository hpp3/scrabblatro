{"ast":null,"code":"var _jsxFileName = \"/Users/eddyg/word-game/word-game/src/components/WordGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Button } from '../components/ui/button';\nimport { Card, CardContent } from '../components/ui/card';\nimport { AlertDialog, AlertDialogAction, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle } from '../components/ui/alert-dialog';\n\n// Scrabble letter distribution and scores\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst letterDistribution = {\n  A: 9,\n  B: 2,\n  C: 2,\n  D: 4,\n  E: 12,\n  F: 2,\n  G: 3,\n  H: 2,\n  I: 9,\n  J: 1,\n  K: 1,\n  L: 4,\n  M: 2,\n  N: 6,\n  O: 8,\n  P: 2,\n  Q: 1,\n  R: 6,\n  S: 4,\n  T: 6,\n  U: 4,\n  V: 2,\n  W: 2,\n  X: 1,\n  Y: 2,\n  Z: 1\n};\nconst letterScores = {\n  A: 1,\n  B: 3,\n  C: 3,\n  D: 2,\n  E: 1,\n  F: 4,\n  G: 2,\n  H: 4,\n  I: 1,\n  J: 8,\n  K: 5,\n  L: 1,\n  M: 3,\n  N: 1,\n  O: 1,\n  P: 3,\n  Q: 10,\n  R: 1,\n  S: 1,\n  T: 1,\n  U: 1,\n  V: 4,\n  W: 4,\n  X: 8,\n  Y: 4,\n  Z: 10\n};\n\n// Function to generate the deck\nconst generateDeck = () => {\n  let deck = [];\n  Object.entries(letterDistribution).forEach(([letter, count]) => {\n    for (let i = 0; i < count; i++) {\n      deck.push(letter);\n    }\n  });\n  return deck;\n};\n\n// Function to shuffle the deck\nconst shuffleDeck = deck => {\n  for (let i = deck.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [deck[i], deck[j]] = [deck[j], deck[i]];\n  }\n  return deck;\n};\n\n// Function to draw cards\nconst drawCards = (deck, count) => {\n  return deck.splice(0, count);\n};\n\n// Main game component\nconst WordGame = () => {\n  _s();\n  const [deck, setDeck] = useState([]);\n  const [hand, setHand] = useState([]);\n  const [selectedCards, setSelectedCards] = useState([]);\n  const [score, setScore] = useState(0);\n  const [roundScore, setRoundScore] = useState(0);\n  const [playsLeft, setPlaysLeft] = useState(3);\n  const [discardsLeft, setDiscardsLeft] = useState(4);\n  const [message, setMessage] = useState('');\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [wordlist, setWordlist] = useState([]);\n  useEffect(() => {\n    // Initialize the game\n    initializeGame();\n\n    // Fetch the word list\n    fetch('./wordlist.10000.txt').then(response => {\n      if (!response.ok) {\n        throw new Error(`Network response was not ok: ${response.statusText}`);\n      }\n      return response.text();\n    }).then(text => {\n      setWordlist(text.split('\\n'));\n    }).catch(error => {\n      console.error('Failed to fetch word list:', error);\n      setMessage('Failed to fetch word list. Please try again later.');\n    });\n  }, []);\n  const initializeGame = () => {\n    const newDeck = shuffleDeck(generateDeck());\n    setDeck(newDeck);\n    setHand(drawCards(newDeck, 7));\n    setSelectedCards([]);\n    setScore(0);\n    setRoundScore(0);\n    setPlaysLeft(3);\n    setDiscardsLeft(4);\n    setMessage('');\n    setIsGameOver(false);\n  };\n  const handleCardClick = index => {\n    const newSelectedCards = [...selectedCards];\n    const cardIndex = newSelectedCards.indexOf(index);\n    if (cardIndex === -1) {\n      newSelectedCards.push(index);\n    } else {\n      newSelectedCards.splice(cardIndex, 1);\n    }\n    setSelectedCards(newSelectedCards);\n  };\n  const handlePlay = () => {\n    if (playsLeft === 0) {\n      setMessage(\"No plays left this round!\");\n      return;\n    }\n    const word = selectedCards.map(index => hand[index]).join('').toLowerCase();\n    if (word.length < 3) {\n      setMessage(\"Word must be at least 3 letters long!\");\n      return;\n    }\n    if (!wordlist.includes(word)) {\n      setMessage(\"Not a valid word!\");\n      return;\n    }\n    const wordScore = word.split('').reduce((sum, letter) => sum + letterScores[letter.toUpperCase()], 0);\n    setScore(score + wordScore);\n    setRoundScore(roundScore + wordScore);\n    setPlaysLeft(playsLeft - 1);\n\n    // Remove played cards and draw new ones\n    const newHand = [...hand];\n    selectedCards.sort((a, b) => b - a).forEach(index => {\n      newHand[index] = drawCards(deck, 1)[0];\n    });\n    setHand(newHand);\n    setSelectedCards([]);\n    setMessage(`Played \"${word}\" for ${wordScore} points!`);\n    if (playsLeft === 1 && discardsLeft === 0) {\n      setIsGameOver(true);\n    }\n  };\n  const handleDiscard = () => {\n    if (discardsLeft === 0) {\n      setMessage(\"No discards left this round!\");\n      return;\n    }\n    if (selectedCards.length === 0) {\n      setMessage(\"Select cards to discard!\");\n      return;\n    }\n    const newHand = [...hand];\n    selectedCards.sort((a, b) => b - a).forEach(index => {\n      newHand[index] = drawCards(deck, 1)[0];\n    });\n    setHand(newHand);\n    setSelectedCards([]);\n    setDiscardsLeft(discardsLeft - 1);\n    setMessage(`Discarded ${selectedCards.length} cards.`);\n    if (playsLeft === 0 && discardsLeft === 1) {\n      setIsGameOver(true);\n    }\n  };\n  const onDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n    const newHand = Array.from(hand);\n    const [reorderedItem] = newHand.splice(result.source.index, 1);\n    newHand.splice(result.destination.index, 0, reorderedItem);\n    setHand(newHand);\n\n    // Update selected cards indices if necessary\n    const newSelectedCards = selectedCards.map(index => {\n      if (index === result.source.index) {\n        return result.destination.index; // Use non-null assertion here since we checked for null\n      }\n      if (index > result.source.index && index <= result.destination.index) {\n        return index - 1;\n      }\n      if (index < result.source.index && index >= result.destination.index) {\n        return index + 1;\n      }\n      return index;\n    });\n    setSelectedCards(newSelectedCards);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Word Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Round Score: \", roundScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Plays Left: \", playsLeft]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Discards Left: \", discardsLeft]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"hand\",\n        direction: \"horizontal\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          className: \"flex space-x-2 mb-4\",\n          children: [hand.map((letter, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: `card-${index}`,\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              className: `${snapshot.isDragging ? 'z-10' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: `w-16 h-20 flex flex-col items-center justify-center cursor-pointer ${selectedCards.includes(index) ? 'ring-2 ring-blue-500' : ''}`,\n                onClick: () => handleCardClick(index),\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  className: \"p-1 flex flex-col items-center justify-between h-full\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-xs\",\n                    children: [letterScores[letter], \" pts\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-3xl font-bold\",\n                    children: letter\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"h-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-x-2 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handlePlay,\n        disabled: selectedCards.length === 0 || playsLeft === 0,\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDiscard,\n        disabled: selectedCards.length === 0 || discardsLeft === 0,\n        children: \"Discard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n      open: isGameOver,\n      children: /*#__PURE__*/_jsxDEV(AlertDialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(AlertDialogHeader, {\n          children: [/*#__PURE__*/_jsxDEV(AlertDialogTitle, {\n            children: \"Game Over!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogDescription, {\n            children: [\"Your final score is \", score, \". Would you like to play again?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AlertDialogFooter, {\n          children: /*#__PURE__*/_jsxDEV(AlertDialogAction, {\n            onClick: initializeGame,\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this);\n};\n_s(WordGame, \"Zw/PkYXvLZ58ALuedV8A4Wrn5HU=\");\n_c = WordGame;\nexport default WordGame;\nvar _c;\n$RefreshReg$(_c, \"WordGame\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","Button","Card","CardContent","AlertDialog","AlertDialogAction","AlertDialogContent","AlertDialogDescription","AlertDialogFooter","AlertDialogHeader","AlertDialogTitle","jsxDEV","_jsxDEV","letterDistribution","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","letterScores","generateDeck","deck","Object","entries","forEach","letter","count","i","push","shuffleDeck","length","j","Math","floor","random","drawCards","splice","WordGame","_s","setDeck","hand","setHand","selectedCards","setSelectedCards","score","setScore","roundScore","setRoundScore","playsLeft","setPlaysLeft","discardsLeft","setDiscardsLeft","message","setMessage","isGameOver","setIsGameOver","wordlist","setWordlist","initializeGame","fetch","then","response","ok","Error","statusText","text","split","catch","error","console","newDeck","handleCardClick","index","newSelectedCards","cardIndex","indexOf","handlePlay","word","map","join","toLowerCase","includes","wordScore","reduce","sum","toUpperCase","newHand","sort","a","b","handleDiscard","onDragEnd","result","destination","Array","from","reorderedItem","source","className","children","fileName","_jsxFileName","lineNumber","columnNumber","droppableId","direction","provided","droppableProps","ref","innerRef","draggableId","snapshot","draggableProps","dragHandleProps","isDragging","onClick","placeholder","disabled","open","_c","$RefreshReg$"],"sources":["/Users/eddyg/word-game/word-game/src/components/WordGame.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd';\nimport { Button } from '../components/ui/button';\nimport { Card, CardContent } from '../components/ui/card';\nimport { \n    AlertDialog, \n    AlertDialogAction, \n    AlertDialogContent, \n    AlertDialogDescription, \n    AlertDialogFooter, \n    AlertDialogHeader, \n    AlertDialogTitle \n} from '../components/ui/alert-dialog';\n\n// Scrabble letter distribution and scores\nconst letterDistribution: { [key: string]: number } = {\n    A: 9, B: 2, C: 2, D: 4, E: 12, F: 2, G: 3, H: 2, I: 9, J: 1, K: 1, L: 4, M: 2,\n    N: 6, O: 8, P: 2, Q: 1, R: 6, S: 4, T: 6, U: 4, V: 2, W: 2, X: 1, Y: 2, Z: 1\n};\n\nconst letterScores: { [key: string]: number } = {\n    A: 1, B: 3, C: 3, D: 2, E: 1, F: 4, G: 2, H: 4, I: 1, J: 8, K: 5, L: 1, M: 3,\n    N: 1, O: 1, P: 3, Q: 10, R: 1, S: 1, T: 1, U: 1, V: 4, W: 4, X: 8, Y: 4, Z: 10\n};\n\n// Function to generate the deck\nconst generateDeck = (): string[] => {\n    let deck: string[] = [];\n    Object.entries(letterDistribution).forEach(([letter, count]) => {\n        for (let i = 0; i < count; i++) {\n            deck.push(letter);\n        }\n    });\n    return deck;\n};\n\n// Function to shuffle the deck\nconst shuffleDeck = (deck: string[]): string[] => {\n    for (let i = deck.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [deck[i], deck[j]] = [deck[j], deck[i]];\n    }\n    return deck;\n};\n\n// Function to draw cards\nconst drawCards = (deck: string[], count: number): string[] => {\n    return deck.splice(0, count);\n};\n\n// Main game component\nconst WordGame: React.FC = () => {\n    const [deck, setDeck] = useState<string[]>([]);\n    const [hand, setHand] = useState<string[]>([]);\n    const [selectedCards, setSelectedCards] = useState<number[]>([]);\n    const [score, setScore] = useState<number>(0);\n    const [roundScore, setRoundScore] = useState<number>(0);\n    const [playsLeft, setPlaysLeft] = useState<number>(3);\n    const [discardsLeft, setDiscardsLeft] = useState<number>(4);\n    const [message, setMessage] = useState<string>('');\n    const [isGameOver, setIsGameOver] = useState<boolean>(false);\n    const [wordlist, setWordlist] = useState<string[]>([]);\n\n    useEffect(() => {\n    // Initialize the game\n    initializeGame();\n\n    // Fetch the word list\n    fetch('./wordlist.10000.txt')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`Network response was not ok: ${response.statusText}`);\n        }\n        return response.text();\n      })\n      .then(text => {\n        setWordlist(text.split('\\n'));\n      })\n      .catch(error => {\n        console.error('Failed to fetch word list:', error);\n        setMessage('Failed to fetch word list. Please try again later.');\n      });\n  }, []);\n\n    const initializeGame = () => {\n        const newDeck = shuffleDeck(generateDeck());\n        setDeck(newDeck);\n        setHand(drawCards(newDeck, 7));\n        setSelectedCards([]);\n        setScore(0);\n        setRoundScore(0);\n        setPlaysLeft(3);\n        setDiscardsLeft(4);\n        setMessage('');\n        setIsGameOver(false);\n    };\n\n    const handleCardClick = (index: number) => {\n        const newSelectedCards = [...selectedCards];\n        const cardIndex = newSelectedCards.indexOf(index);\n        if (cardIndex === -1) {\n            newSelectedCards.push(index);\n        } else {\n            newSelectedCards.splice(cardIndex, 1);\n        }\n        setSelectedCards(newSelectedCards);\n    };\n\n    const handlePlay = () => {\n        if (playsLeft === 0) {\n            setMessage(\"No plays left this round!\");\n            return;\n        }\n\n        const word = selectedCards.map(index => hand[index]).join('').toLowerCase();\n        if (word.length < 3) {\n            setMessage(\"Word must be at least 3 letters long!\");\n            return;\n        }\n\n        if (!wordlist.includes(word)) {\n            setMessage(\"Not a valid word!\");\n            return;\n        }\n\n        const wordScore = word.split('').reduce((sum, letter) => sum + letterScores[letter.toUpperCase()], 0);\n        setScore(score + wordScore);\n        setRoundScore(roundScore + wordScore);\n        setPlaysLeft(playsLeft - 1);\n\n        // Remove played cards and draw new ones\n        const newHand = [...hand];\n        selectedCards.sort((a, b) => b - a).forEach(index => {\n            newHand[index] = drawCards(deck, 1)[0];\n        });\n        setHand(newHand);\n        setSelectedCards([]);\n        setMessage(`Played \"${word}\" for ${wordScore} points!`);\n\n        if (playsLeft === 1 && discardsLeft === 0) {\n            setIsGameOver(true);\n        }\n    };\n\n    const handleDiscard = () => {\n        if (discardsLeft === 0) {\n            setMessage(\"No discards left this round!\");\n            return;\n        }\n\n        if (selectedCards.length === 0) {\n            setMessage(\"Select cards to discard!\");\n            return;\n        }\n\n        const newHand = [...hand];\n        selectedCards.sort((a, b) => b - a).forEach(index => {\n            newHand[index] = drawCards(deck, 1)[0];\n        });\n        setHand(newHand);\n        setSelectedCards([]);\n        setDiscardsLeft(discardsLeft - 1);\n        setMessage(`Discarded ${selectedCards.length} cards.`);\n\n        if (playsLeft === 0 && discardsLeft === 1) {\n            setIsGameOver(true);\n        }\n    };\n\n    const onDragEnd = (result: DropResult) => {\n        if (!result.destination) {\n            return;\n        }\n\n        const newHand = Array.from(hand);\n        const [reorderedItem] = newHand.splice(result.source.index, 1);\n        newHand.splice(result.destination.index, 0, reorderedItem);\n\n        setHand(newHand);\n\n        // Update selected cards indices if necessary\n        const newSelectedCards = selectedCards.map(index => {\n            if (index === result.source.index) {\n                return result.destination!.index; // Use non-null assertion here since we checked for null\n            }\n            if (index > result.source.index && index <= result.destination!.index) {\n                return index - 1;\n            }\n            if (index < result.source.index && index >= result.destination!.index) {\n                return index + 1;\n            }\n            return index;\n        });\n        setSelectedCards(newSelectedCards);\n    };\n\n    return (\n        <div className=\"p-4\">\n        <h1 className=\"text-2xl font-bold mb-4\">Word Game</h1>\n        <div className=\"mb-4\">\n        <p>Total Score: {score}</p>\n        <p>Round Score: {roundScore}</p>\n        <p>Plays Left: {playsLeft}</p>\n        <p>Discards Left: {discardsLeft}</p>\n        </div>\n        <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"hand\" direction=\"horizontal\">\n        {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef} className=\"flex space-x-2 mb-4\">\n            {hand.map((letter, index) => (\n                <Draggable key={index} draggableId={`card-${index}`} index={index}>\n                {(provided, snapshot) => (\n                    <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    className={`${snapshot.isDragging ? 'z-10' : ''}`}\n                    >\n                    <Card \n                    className={`w-16 h-20 flex flex-col items-center justify-center cursor-pointer ${selectedCards.includes(index) ? 'ring-2 ring-blue-500' : ''}`}\n                    onClick={() => handleCardClick(index)}\n                    >\n                    <CardContent className=\"p-1 flex flex-col items-center justify-between h-full\">\n                    <span className=\"text-xs\">{letterScores[letter]} pts</span>\n                    <span className=\"text-3xl font-bold\">{letter}</span>\n                    <div className=\"h-4\"></div>\n                    </CardContent>\n                    </Card>\n                    </div>\n                )}\n                </Draggable>\n            ))}\n            {provided.placeholder}\n            </div>\n        )}\n        </Droppable>\n        </DragDropContext>\n        <div className=\"space-x-2 mb-4\">\n        <Button onClick={handlePlay} disabled={selectedCards.length === 0 || playsLeft === 0}>Play</Button>\n        <Button onClick={handleDiscard} disabled={selectedCards.length === 0 || discardsLeft === 0}>Discard</Button>\n        </div>\n        <p>{message}</p>\n        <AlertDialog open={isGameOver}>\n        <AlertDialogContent>\n        <AlertDialogHeader>\n        <AlertDialogTitle>Game Over!</AlertDialogTitle>\n        <AlertDialogDescription>\n        Your final score is {score}. Would you like to play again?\n        </AlertDialogDescription>\n        </AlertDialogHeader>\n        <AlertDialogFooter>\n        <AlertDialogAction onClick={initializeGame}>Play Again</AlertDialogAction>\n        </AlertDialogFooter>\n        </AlertDialogContent>\n        </AlertDialog>\n        </div>\n    );\n};\n\nexport default WordGame;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAoB,qBAAqB;AACvF,SAASC,MAAM,QAAQ,yBAAyB;AAChD,SAASC,IAAI,EAAEC,WAAW,QAAQ,uBAAuB;AACzD,SACIC,WAAW,EACXC,iBAAiB,EACjBC,kBAAkB,EAClBC,sBAAsB,EACtBC,iBAAiB,EACjBC,iBAAiB,EACjBC,gBAAgB,QACb,+BAA+B;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,kBAA6C,GAAG;EAClDC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,EAAE;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAC7EC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE;AAC/E,CAAC;AAED,MAAMC,YAAuC,GAAG;EAC5C1B,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAC5EC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,EAAE;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE;AAChF,CAAC;;AAED;AACA,MAAME,YAAY,GAAGA,CAAA,KAAgB;EACjC,IAAIC,IAAc,GAAG,EAAE;EACvBC,MAAM,CAACC,OAAO,CAAC/B,kBAAkB,CAAC,CAACgC,OAAO,CAAC,CAAC,CAACC,MAAM,EAAEC,KAAK,CAAC,KAAK;IAC5D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,EAAEC,CAAC,EAAE,EAAE;MAC5BN,IAAI,CAACO,IAAI,CAACH,MAAM,CAAC;IACrB;EACJ,CAAC,CAAC;EACF,OAAOJ,IAAI;AACf,CAAC;;AAED;AACA,MAAMQ,WAAW,GAAIR,IAAc,IAAe;EAC9C,KAAK,IAAIM,CAAC,GAAGN,IAAI,CAACS,MAAM,GAAG,CAAC,EAAEH,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACtC,MAAMI,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIP,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAACN,IAAI,CAACM,CAAC,CAAC,EAAEN,IAAI,CAACU,CAAC,CAAC,CAAC,GAAG,CAACV,IAAI,CAACU,CAAC,CAAC,EAAEV,IAAI,CAACM,CAAC,CAAC,CAAC;EAC3C;EACA,OAAON,IAAI;AACf,CAAC;;AAED;AACA,MAAMc,SAAS,GAAGA,CAACd,IAAc,EAAEK,KAAa,KAAe;EAC3D,OAAOL,IAAI,CAACe,MAAM,CAAC,CAAC,EAAEV,KAAK,CAAC;AAChC,CAAC;;AAED;AACA,MAAMW,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACjB,IAAI,EAAEkB,OAAO,CAAC,GAAGhE,QAAQ,CAAW,EAAE,CAAC;EAC9C,MAAM,CAACiE,IAAI,EAAEC,OAAO,CAAC,GAAGlE,QAAQ,CAAW,EAAE,CAAC;EAC9C,MAAM,CAACmE,aAAa,EAAEC,gBAAgB,CAAC,GAAGpE,QAAQ,CAAW,EAAE,CAAC;EAChE,MAAM,CAACqE,KAAK,EAAEC,QAAQ,CAAC,GAAGtE,QAAQ,CAAS,CAAC,CAAC;EAC7C,MAAM,CAACuE,UAAU,EAAEC,aAAa,CAAC,GAAGxE,QAAQ,CAAS,CAAC,CAAC;EACvD,MAAM,CAACyE,SAAS,EAAEC,YAAY,CAAC,GAAG1E,QAAQ,CAAS,CAAC,CAAC;EACrD,MAAM,CAAC2E,YAAY,EAAEC,eAAe,CAAC,GAAG5E,QAAQ,CAAS,CAAC,CAAC;EAC3D,MAAM,CAAC6E,OAAO,EAAEC,UAAU,CAAC,GAAG9E,QAAQ,CAAS,EAAE,CAAC;EAClD,MAAM,CAAC+E,UAAU,EAAEC,aAAa,CAAC,GAAGhF,QAAQ,CAAU,KAAK,CAAC;EAC5D,MAAM,CAACiF,QAAQ,EAAEC,WAAW,CAAC,GAAGlF,QAAQ,CAAW,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IAChB;IACAkF,cAAc,CAAC,CAAC;;IAEhB;IACAC,KAAK,CAAC,sBAAsB,CAAC,CAC1BC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,gCAAgCF,QAAQ,CAACG,UAAU,EAAE,CAAC;MACxE;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDL,IAAI,CAACK,IAAI,IAAI;MACZR,WAAW,CAACQ,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDf,UAAU,CAAC,oDAAoD,CAAC;IAClE,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEJ,MAAMK,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMY,OAAO,GAAGzC,WAAW,CAACT,YAAY,CAAC,CAAC,CAAC;IAC3CmB,OAAO,CAAC+B,OAAO,CAAC;IAChB7B,OAAO,CAACN,SAAS,CAACmC,OAAO,EAAE,CAAC,CAAC,CAAC;IAC9B3B,gBAAgB,CAAC,EAAE,CAAC;IACpBE,QAAQ,CAAC,CAAC,CAAC;IACXE,aAAa,CAAC,CAAC,CAAC;IAChBE,YAAY,CAAC,CAAC,CAAC;IACfE,eAAe,CAAC,CAAC,CAAC;IAClBE,UAAU,CAAC,EAAE,CAAC;IACdE,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,MAAMgB,eAAe,GAAIC,KAAa,IAAK;IACvC,MAAMC,gBAAgB,GAAG,CAAC,GAAG/B,aAAa,CAAC;IAC3C,MAAMgC,SAAS,GAAGD,gBAAgB,CAACE,OAAO,CAACH,KAAK,CAAC;IACjD,IAAIE,SAAS,KAAK,CAAC,CAAC,EAAE;MAClBD,gBAAgB,CAAC7C,IAAI,CAAC4C,KAAK,CAAC;IAChC,CAAC,MAAM;MACHC,gBAAgB,CAACrC,MAAM,CAACsC,SAAS,EAAE,CAAC,CAAC;IACzC;IACA/B,gBAAgB,CAAC8B,gBAAgB,CAAC;EACtC,CAAC;EAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAI5B,SAAS,KAAK,CAAC,EAAE;MACjBK,UAAU,CAAC,2BAA2B,CAAC;MACvC;IACJ;IAEA,MAAMwB,IAAI,GAAGnC,aAAa,CAACoC,GAAG,CAACN,KAAK,IAAIhC,IAAI,CAACgC,KAAK,CAAC,CAAC,CAACO,IAAI,CAAC,EAAE,CAAC,CAACC,WAAW,CAAC,CAAC;IAC3E,IAAIH,IAAI,CAAC/C,MAAM,GAAG,CAAC,EAAE;MACjBuB,UAAU,CAAC,uCAAuC,CAAC;MACnD;IACJ;IAEA,IAAI,CAACG,QAAQ,CAACyB,QAAQ,CAACJ,IAAI,CAAC,EAAE;MAC1BxB,UAAU,CAAC,mBAAmB,CAAC;MAC/B;IACJ;IAEA,MAAM6B,SAAS,GAAGL,IAAI,CAACX,KAAK,CAAC,EAAE,CAAC,CAACiB,MAAM,CAAC,CAACC,GAAG,EAAE3D,MAAM,KAAK2D,GAAG,GAAGjE,YAAY,CAACM,MAAM,CAAC4D,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACrGxC,QAAQ,CAACD,KAAK,GAAGsC,SAAS,CAAC;IAC3BnC,aAAa,CAACD,UAAU,GAAGoC,SAAS,CAAC;IACrCjC,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;;IAE3B;IACA,MAAMsC,OAAO,GAAG,CAAC,GAAG9C,IAAI,CAAC;IACzBE,aAAa,CAAC6C,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAGD,CAAC,CAAC,CAAChE,OAAO,CAACgD,KAAK,IAAI;MACjDc,OAAO,CAACd,KAAK,CAAC,GAAGrC,SAAS,CAACd,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC;IACFoB,OAAO,CAAC6C,OAAO,CAAC;IAChB3C,gBAAgB,CAAC,EAAE,CAAC;IACpBU,UAAU,CAAC,WAAWwB,IAAI,SAASK,SAAS,UAAU,CAAC;IAEvD,IAAIlC,SAAS,KAAK,CAAC,IAAIE,YAAY,KAAK,CAAC,EAAE;MACvCK,aAAa,CAAC,IAAI,CAAC;IACvB;EACJ,CAAC;EAED,MAAMmC,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIxC,YAAY,KAAK,CAAC,EAAE;MACpBG,UAAU,CAAC,8BAA8B,CAAC;MAC1C;IACJ;IAEA,IAAIX,aAAa,CAACZ,MAAM,KAAK,CAAC,EAAE;MAC5BuB,UAAU,CAAC,0BAA0B,CAAC;MACtC;IACJ;IAEA,MAAMiC,OAAO,GAAG,CAAC,GAAG9C,IAAI,CAAC;IACzBE,aAAa,CAAC6C,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAGD,CAAC,CAAC,CAAChE,OAAO,CAACgD,KAAK,IAAI;MACjDc,OAAO,CAACd,KAAK,CAAC,GAAGrC,SAAS,CAACd,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC;IACFoB,OAAO,CAAC6C,OAAO,CAAC;IAChB3C,gBAAgB,CAAC,EAAE,CAAC;IACpBQ,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;IACjCG,UAAU,CAAC,aAAaX,aAAa,CAACZ,MAAM,SAAS,CAAC;IAEtD,IAAIkB,SAAS,KAAK,CAAC,IAAIE,YAAY,KAAK,CAAC,EAAE;MACvCK,aAAa,CAAC,IAAI,CAAC;IACvB;EACJ,CAAC;EAED,MAAMoC,SAAS,GAAIC,MAAkB,IAAK;IACtC,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE;MACrB;IACJ;IAEA,MAAMP,OAAO,GAAGQ,KAAK,CAACC,IAAI,CAACvD,IAAI,CAAC;IAChC,MAAM,CAACwD,aAAa,CAAC,GAAGV,OAAO,CAAClD,MAAM,CAACwD,MAAM,CAACK,MAAM,CAACzB,KAAK,EAAE,CAAC,CAAC;IAC9Dc,OAAO,CAAClD,MAAM,CAACwD,MAAM,CAACC,WAAW,CAACrB,KAAK,EAAE,CAAC,EAAEwB,aAAa,CAAC;IAE1DvD,OAAO,CAAC6C,OAAO,CAAC;;IAEhB;IACA,MAAMb,gBAAgB,GAAG/B,aAAa,CAACoC,GAAG,CAACN,KAAK,IAAI;MAChD,IAAIA,KAAK,KAAKoB,MAAM,CAACK,MAAM,CAACzB,KAAK,EAAE;QAC/B,OAAOoB,MAAM,CAACC,WAAW,CAAErB,KAAK,CAAC,CAAC;MACtC;MACA,IAAIA,KAAK,GAAGoB,MAAM,CAACK,MAAM,CAACzB,KAAK,IAAIA,KAAK,IAAIoB,MAAM,CAACC,WAAW,CAAErB,KAAK,EAAE;QACnE,OAAOA,KAAK,GAAG,CAAC;MACpB;MACA,IAAIA,KAAK,GAAGoB,MAAM,CAACK,MAAM,CAACzB,KAAK,IAAIA,KAAK,IAAIoB,MAAM,CAACC,WAAW,CAAErB,KAAK,EAAE;QACnE,OAAOA,KAAK,GAAG,CAAC;MACpB;MACA,OAAOA,KAAK;IAChB,CAAC,CAAC;IACF7B,gBAAgB,CAAC8B,gBAAgB,CAAC;EACtC,CAAC;EAED,oBACIlF,OAAA;IAAK2G,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACpB5G,OAAA;MAAI2G,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtDhH,OAAA;MAAK2G,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACrB5G,OAAA;QAAA4G,QAAA,GAAG,eAAa,EAACvD,KAAK;MAAA;QAAAwD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BhH,OAAA;QAAA4G,QAAA,GAAG,eAAa,EAACrD,UAAU;MAAA;QAAAsD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChChH,OAAA;QAAA4G,QAAA,GAAG,cAAY,EAACnD,SAAS;MAAA;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BhH,OAAA;QAAA4G,QAAA,GAAG,iBAAe,EAACjD,YAAY;MAAA;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACNhH,OAAA,CAACd,eAAe;MAACkH,SAAS,EAAEA,SAAU;MAAAQ,QAAA,eACtC5G,OAAA,CAACb,SAAS;QAAC8H,WAAW,EAAC,MAAM;QAACC,SAAS,EAAC,YAAY;QAAAN,QAAA,EAClDO,QAAQ,iBACNnH,OAAA;UAAA,GAASmH,QAAQ,CAACC,cAAc;UAAEC,GAAG,EAAEF,QAAQ,CAACG,QAAS;UAACX,SAAS,EAAC,qBAAqB;UAAAC,QAAA,GACxF3D,IAAI,CAACsC,GAAG,CAAC,CAACrD,MAAM,EAAE+C,KAAK,kBACpBjF,OAAA,CAACZ,SAAS;YAAamI,WAAW,EAAE,QAAQtC,KAAK,EAAG;YAACA,KAAK,EAAEA,KAAM;YAAA2B,QAAA,EACjEA,CAACO,QAAQ,EAAEK,QAAQ,kBAChBxH,OAAA;cACAqH,GAAG,EAAEF,QAAQ,CAACG,QAAS;cAAA,GACnBH,QAAQ,CAACM,cAAc;cAAA,GACvBN,QAAQ,CAACO,eAAe;cAC5Bf,SAAS,EAAE,GAAGa,QAAQ,CAACG,UAAU,GAAG,MAAM,GAAG,EAAE,EAAG;cAAAf,QAAA,eAElD5G,OAAA,CAACV,IAAI;gBACLqH,SAAS,EAAE,sEAAsExD,aAAa,CAACuC,QAAQ,CAACT,KAAK,CAAC,GAAG,sBAAsB,GAAG,EAAE,EAAG;gBAC/I2C,OAAO,EAAEA,CAAA,KAAM5C,eAAe,CAACC,KAAK,CAAE;gBAAA2B,QAAA,eAEtC5G,OAAA,CAACT,WAAW;kBAACoH,SAAS,EAAC,uDAAuD;kBAAAC,QAAA,gBAC9E5G,OAAA;oBAAM2G,SAAS,EAAC,SAAS;oBAAAC,QAAA,GAAEhF,YAAY,CAACM,MAAM,CAAC,EAAC,MAAI;kBAAA;oBAAA2E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAC3DhH,OAAA;oBAAM2G,SAAS,EAAC,oBAAoB;oBAAAC,QAAA,EAAE1E;kBAAM;oBAAA2E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eACpDhH,OAAA;oBAAK2G,SAAS,EAAC;kBAAK;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACd;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF;UACR,GAnBe/B,KAAK;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAoBV,CACd,CAAC,EACDG,QAAQ,CAACU,WAAW;QAAA;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MACR;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eAClBhH,OAAA;MAAK2G,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC/B5G,OAAA,CAACX,MAAM;QAACuI,OAAO,EAAEvC,UAAW;QAACyC,QAAQ,EAAE3E,aAAa,CAACZ,MAAM,KAAK,CAAC,IAAIkB,SAAS,KAAK,CAAE;QAAAmD,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnGhH,OAAA,CAACX,MAAM;QAACuI,OAAO,EAAEzB,aAAc;QAAC2B,QAAQ,EAAE3E,aAAa,CAACZ,MAAM,KAAK,CAAC,IAAIoB,YAAY,KAAK,CAAE;QAAAiD,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvG,CAAC,eACNhH,OAAA;MAAA4G,QAAA,EAAI/C;IAAO;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBhH,OAAA,CAACR,WAAW;MAACuI,IAAI,EAAEhE,UAAW;MAAA6C,QAAA,eAC9B5G,OAAA,CAACN,kBAAkB;QAAAkH,QAAA,gBACnB5G,OAAA,CAACH,iBAAiB;UAAA+G,QAAA,gBAClB5G,OAAA,CAACF,gBAAgB;YAAA8G,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkB,CAAC,eAC/ChH,OAAA,CAACL,sBAAsB;YAAAiH,QAAA,GAAC,sBACJ,EAACvD,KAAK,EAAC,iCAC3B;UAAA;YAAAwD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAwB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACpBhH,OAAA,CAACJ,iBAAiB;UAAAgH,QAAA,eAClB5G,OAAA,CAACP,iBAAiB;YAACmI,OAAO,EAAEzD,cAAe;YAAAyC,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAmB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd,CAAC;AAACjE,EAAA,CA9MID,QAAkB;AAAAkF,EAAA,GAAlBlF,QAAkB;AAgNxB,eAAeA,QAAQ;AAAC,IAAAkF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}